{"version":3,"sources":["./src/app/auth/landingpage/landingpage.component.html","./src/app/shared/layout/header/header.component.ts","./src/app/auth/registration/registration.component.ts","./src/app/auth/auth-routing.module.ts","./src/app/shared/ui/dialog/register-dialog/register-dialog.component.ts","./src/app/auth/forgot-password/forgot-password.component.html","./src/app/shared/layout/article/article.component.html","./node_modules/ng-recaptcha/fesm2015/ng-recaptcha.js","./src/app/auth/forgot-password/forgot-password.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/auth.module.ts","./src/app/shared/layout/footer/footer.component.html","./src/app/shared/layout/header/header.component.html","./src/app/auth/login/login.component.ts","./src/app/auth/landingpage/landingpage.component.ts","./node_modules/@angular/material/fesm2015/checkbox.js","./src/app/shared/layout/footer/footer.component.ts","./src/app/shared/layout/article/article.component.ts","./src/app/auth/registration/registration.component.html"],"names":[],"mappings":"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,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,+BAA+B;AACrG;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,iEAAW;AACf;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,2DAAK;AACT;AACA,wDAAU;AACV,IAAI,4DAAM;AACV;AACA,qBAAqB,wDAAU,GAAG,qDAAO,IAAI,8DAAQ,KAAK,qDAAO,IAAI,4DAAM;AAC3E;;AAEA;AACA;AACA,6BAA6B,8DAAuB,EAAE,8BAA8B;AACpF,6BAA6B,8DAAuB,EAAE,qDAAqD,2CAA2C,EAAE,EAAE;;AAE1J;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8DAAuB,EAAE,wBAAwB;AACxE,uBAAuB,8DAAuB,EAAE,+CAA+C,qCAAqC,EAAE;AACtI;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4CAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA;AACA;AACA,oDAAoD,gBAAgB;AACpE;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA,yDAAyD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GAAG,GAAG,CAAC,CAAC;oBACvB,KAAK,EAAE,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;oBACnC,MAAM,EAAE,IAAI;iBACb,CAAC;aACH;SACF;IACH,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0HAAuB,EAAE;YACxC,UAAU,EAAE,iBAAiB;SAC9B,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACa;AACqL;AACtJ;AACsD;AACtE;AACpB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACK;AACA;;AAEjD;AACA,yBAAyB,SAAS,sBAAsB;AACxD;AACA,yCAAyC,4DAAc;AACvD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4DAAc;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAa,CAAC,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW,0BAA0B,QAAQ;AAChE;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA,8BAA8B,mFAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,8DAAmB,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,cAAc,+DAAwB,gCAAgC,+DAAwB,CAAC,0FAAqB,MAAM,+DAAwB,mCAAmC;AACzd,mBAAmB,+DAAwB,EAAE,mGAAmG;AAChJ,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB,CAAC,gEAAS;AACpC,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,0GAA0G;AACjH,QAAQ,4DAAqB;AAC7B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,wYAAwY,YAAY,+DAA+D,wCAAwC,gEAAyB,yCAAyC,wEAAiC,2+BAA2+B;AAC3lD,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,0EAA0E,wCAAwC,EAAE,yEAAyE,kCAAkC,EAAE;AAC1P,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,uDAAgB;AACxB,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,6DAAsB;AAC9B,QAAQ,uDAAgB;AACxB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,0FAA0F,iCAAiC,EAAE;AACtJ,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,oBAAoB,yDAAkB;AACtC,oBAAoB,yDAAkB;AACtC,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB,gJAAgJ,6DAAsB;AAC/L,KAAK,EAAE,eAAe,gEAAgB,EAAE,wEAAwB,wDAAwD,GAAG,UAAU,IAAI,WAAW,4CAA4C,OAAO,UAAU,KAAK,WAAW,yDAAyD,OAAO,4BAA4B,IAAI,uDAAuD,KAAK,qBAAqB,0DAA0D,SAAS,oBAAoB,MAAM,mDAAmD,KAAK,qBAAqB,yDAAyD,KAAK,qDAAqD,oBAAoB,GAAG,8BAA8B,wDAAwD,KAAK,uDAAuD,UAAU,uBAAuB,GAAG,UAAU,yBAAyB,wDAAwD,KAAK,sDAAsD,UAAU,wBAAwB,GAAG,UAAU,0BAA0B,wDAAwD,KAAK,uDAAuD,UAAU,yBAAyB,GAAG,UAAU,wBAAwB,wDAAwD,KAAK,sDAAsD,UAAU,uBAAuB,GAAG,UAAU,0BAA0B,0DAA0D,GAAG,iCAAiC,UAAU,oBAAoB,WAAW,UAAU,qBAAqB,6CAA6C,MAAM,OAAO,QAAQ,SAAS,kBAAkB,kBAAkB,sBAAsB,oBAAoB,cAAc,2GAA2G,eAAe,wCAAwC,sCAAsC,gBAAgB,eAAe,uEAAuE,YAAY,qBAAqB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,qBAAqB,sBAAsB,oBAAoB,mBAAmB,oBAAoB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,8BAA8B,qBAAqB,YAAY,cAAc,YAAY,iBAAiB,QAAQ,kBAAkB,sBAAsB,mBAAmB,WAAW,cAAc,wCAAwC,gBAAgB,kBAAkB,6CAA6C,cAAc,eAAe,oBAAoB,6BAA6B,0DAA0D,iBAAiB,mBAAmB,6CAA6C,gBAAgB,iFAAiF,oBAAoB,yBAAyB,mBAAmB,oBAAoB,uBAAuB,wGAAwG,kDAAkD,gBAAgB,iEAAiE,gBAAgB,gCAAgC,WAAW,YAAY,eAAe,oEAAoE,YAAY,mEAAmE,YAAY,wIAAwI,UAAU,oBAAoB,oEAAoE,cAAc,wBAAwB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,WAAW,6BAA6B,4BAA4B,2BAA2B,4BAA4B,+DAA+D,uBAAuB,wBAAwB,uBAAuB,WAAW,UAAU,iCAAiC,kBAAkB,kDAAkD,SAAS,qBAAqB,eAAe,yDAAyD,QAAQ,gBAAgB,kBAAkB,mEAAmE,iBAAiB,iBAAiB,8CAA8C,UAAU,mDAAmD,oBAAoB,8CAA8C,mCAAmC,oDAAoD,UAAU,wBAAwB,yDAAyD,oBAAoB,oDAAoD,UAAU,iCAAiC,iDAAiD,6BAA6B,uBAAuB,eAAe,iDAAiD,WAAW,8DAA8D,2DAA2D,kEAAkE,yEAAyE,oEAAoE,2DAA2D,mEAAmE,yEAAyE,8DAA8D,4DAA4D,kEAAkE,wEAAwE,iEAAiE,uEAAuE,iEAAiE,uEAAuE,iEAAiE,wEAAwE,iEAAiE,wEAAwE,oEAAoE,4DAA4D,mEAAmE,0EAA0E,oBAAoB,SAAS,SAAS,mCAAmC,kBAAkB,sBAAsB,qBAAqB,YAAY,WAAW,UAAU,oBAAoB,4CAA4C;AACz6N;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,OAAO,8DAAY,EAAE;AAC1B,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,6BAA6B,OAAO,uDAAS,uBAAuB,GAAG;AAC5E,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,sCAAsC,GAAG;AAC/G,KAAK,6BAA6B,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,0FAAqB,IAAI,GAAG;AACxG,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,yCAAyC;AAC/G;AACA;AACA,iBAAiB,OAAO,mDAAK,yBAAyB;AACtD,sBAAsB,OAAO,mDAAK,8BAA8B;AAChE,uBAAuB,OAAO,mDAAK,+BAA+B;AAClE,UAAU,OAAO,mDAAK,EAAE;AACxB,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC,YAAY,OAAO,mDAAK,EAAE;AAC1B,cAAc,OAAO,oDAAM,EAAE;AAC7B,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,aAAa,OAAO,mDAAK,EAAE;AAC3B,qBAAqB,OAAO,uDAAS,oBAAoB;AACzD,cAAc,OAAO,uDAAS,SAAS,gEAAS,IAAI;AACpD,eAAe,OAAO,mDAAK,EAAE;AAC7B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,qBAAqB,OAAO,mDAAK,EAAE;AACnC;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA,2qCAA2qC,mBAAmB,s3BAAs3B;AACpjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,qEAAqE,GAAG,UAAU,IAAI,WAAW,4CAA4C,OAAO,UAAU,KAAK,WAAW,yDAAyD,OAAO,4BAA4B,IAAI,uDAAuD,KAAK,qBAAqB,0DAA0D,SAAS,oBAAoB,MAAM,mDAAmD,KAAK,qBAAqB,yDAAyD,KAAK,qDAAqD,oBAAoB,GAAG,8BAA8B,wDAAwD,KAAK,uDAAuD,UAAU,uBAAuB,GAAG,UAAU,yBAAyB,wDAAwD,KAAK,sDAAsD,UAAU,wBAAwB,GAAG,UAAU,0BAA0B,wDAAwD,KAAK,uDAAuD,UAAU,yBAAyB,GAAG,UAAU,wBAAwB,wDAAwD,KAAK,sDAAsD,UAAU,uBAAuB,GAAG,UAAU,0BAA0B,0DAA0D,GAAG,iCAAiC,UAAU,oBAAoB,WAAW,UAAU,qBAAqB,6CAA6C,MAAM,OAAO,QAAQ,SAAS,kBAAkB,kBAAkB,sBAAsB,oBAAoB,cAAc,2GAA2G,eAAe,wCAAwC,sCAAsC,gBAAgB,eAAe,uEAAuE,YAAY,qBAAqB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,qBAAqB,sBAAsB,oBAAoB,mBAAmB,oBAAoB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,8BAA8B,qBAAqB,YAAY,cAAc,YAAY,iBAAiB,QAAQ,kBAAkB,sBAAsB,mBAAmB,WAAW,cAAc,wCAAwC,gBAAgB,kBAAkB,6CAA6C,cAAc,eAAe,oBAAoB,6BAA6B,0DAA0D,iBAAiB,mBAAmB,6CAA6C,gBAAgB,iFAAiF,oBAAoB,yBAAyB,mBAAmB,oBAAoB,uBAAuB,wGAAwG,kDAAkD,gBAAgB,iEAAiE,gBAAgB,gCAAgC,WAAW,YAAY,eAAe,oEAAoE,YAAY,mEAAmE,YAAY,wIAAwI,UAAU,oBAAoB,oEAAoE,cAAc,wBAAwB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,WAAW,6BAA6B,4BAA4B,2BAA2B,4BAA4B,+DAA+D,uBAAuB,wBAAwB,uBAAuB,WAAW,UAAU,iCAAiC,kBAAkB,kDAAkD,SAAS,qBAAqB,eAAe,yDAAyD,QAAQ,gBAAgB,kBAAkB,mEAAmE,iBAAiB,iBAAiB,8CAA8C,UAAU,mDAAmD,oBAAoB,8CAA8C,mCAAmC,oDAAoD,UAAU,wBAAwB,yDAAyD,oBAAoB,oDAAoD,UAAU,iCAAiC,iDAAiD,6BAA6B,uBAAuB,eAAe,iDAAiD,WAAW,8DAA8D,2DAA2D,kEAAkE,yEAAyE,oEAAoE,2DAA2D,mEAAmE,yEAAyE,8DAA8D,4DAA4D,kEAAkE,wEAAwE,iEAAiE,uEAAuE,iEAAiE,uEAAuE,iEAAiE,wEAAwE,iEAAiE,wEAAwE,oEAAoE,4DAA4D,mEAAmE,0EAA0E,oBAAoB,SAAS,SAAS,mCAAmC,kBAAkB,sBAAsB,qBAAqB,YAAY,WAAW,UAAU,oBAAoB;AAC10N,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,+DAAwB,EAAE,GAAG,OAAO,8DAAmB,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AACxJ,sBAAsB,uDAAS;AAC/B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,0FAAqB;AAC5C,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS;AACT,kBAAkB,uDAAS;AAC3B,mBAAmB,gEAAS;AAC5B,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAa;AAC1B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wEAAyB;AACpE;AACA,sFAAsF,qFAAqF;AAC3K,oCAAoC,+DAAwB,EAAE,4NAA4N,gEAAyB,qCAAqC,wEAAiC,GAAG;AAC5X,gEAAgE,mEAA4B;AAC5F,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,8DAAuB,EAAE,4CAA4C;AAChH,2CAA2C,8DAAuB,EAAE,mEAAmE,yDAAyD,EAAE,EAAE;AACpM,cAAc,oDAAoD,gEAAyB,uCAAuC,wFAAwF,EAAE,EAAE;AAC9N,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA,yBAAyB,8DAAuB,EAAE,0BAA0B;AAC5E,yBAAyB,8DAAuB,EAAE,iDAAiD,uCAAuC,EAAE;AAC5I,YAAY,sEAAe,EAAE,sEAAe,EAAE,sEAAe;AAC7D;AACA,WAAW,sEAAe,wCAAwC;AAClE,cAAc,oDAAoD,gEAAyB,qBAAqB,4BAA4B,sBAAsB,EAAE,wBAAwB,SAAS,sEAAe,EAAE,sEAAe,EAAE,sEAAe,uCAAuC,EAAE,wBAAwB,sBAAsB,sEAAe,uCAAuC,EAAE,EAAE,EAAE,EAAE;AAC3Y,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA,oBAAoB,sEAAe,EAAE,sEAAe,EAAE,sEAAe;AACrE;AACA;AACA,uCAAuC,sEAAe;AACtD;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEqS;;AAErS,oC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3lBA;AAAA;AAAO,MAAM,eAAe;IAC1B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;CACpB;;;;;;;;;;;;;ACJD;AAAA;AAAO,MAAM,gBAAgB;IAM3B,gBAAe,CAAC;IAEhB,QAAQ,KAAU,CAAC;IAEnB,eAAe;QACb,OAAO,UAAU,GAAG,IAAI,CAAC,WAAW;IACtC,CAAC;IAED,WAAW;QACT,OAAO,OAAO,GAAG,IAAI,CAAC,WAAW;IACnC,CAAC;IAED,SAAS;QACP,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,2BAA2B,GAAG,IAAI,CAAC,MAAM;SACjD;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GCOe,oJAGC,mGAED;2GACA,oJAGC,qHAED;2GACA,oJAGC,iHAED;2GAgBA,oJAMC,mGAED;2GACA,oJAGC,kGAED;2GAeA,oJAGC,oGAED;2GACA,oJAGC,uGAED;2GA9GhB,oJAA4B,KAC1B,0HAAM,KACJ,mnBAAY,IACZ,+IAAuB,KACrB,sLAA8D,KAC5D,yIAAiB,KACf,0IAAoB,KAClB,sHAAI,yFAAY,MAElB;;;;;wBAAwF;MAAxB;;wBAAuB;MAAvF,m0BAAwF,IACtF,oKAAqC,KACnC,gJAAwB,KACtB,yJAAkC,qFAAQ,MAC1C;;;;;;;;;;;;4cASE,GAJA,wEAEE,KAPJ,43CASE,IACF,qJAA8B,qGAAwB,MAExD,gJAAwB,KACtB,yJAAkC,qFAAQ,MAC1C;;;;;;;;;;;;4cASE,GAJA,wEAEE,KAPJ,43CASE,IACF,+YAGC,IAGD,+YAGC,IAGD,+YAGC,IAIH,gJAAwB,KACtB,yJAAkC,6FAAgB,MAClD;;;;;;;;;;;;4cAWE,GANA,wEAIE,KATJ,43CAWE,IACF,+YAMC,IAGD,+YAGC,IAIH,gJAAwB,KACtB,sJAA+B,0FAAa,MAC5C;;;;;;;;;;;;4cAUE,GAJA,wEAEE,KARJ,43CAUE,IACF,+YAGC,IAGD,+YAGC,IAIH,0JAAiC,KAC/B,yJAAkC,uFAAU,MAC5C,0IAAiB,KACf;;;;;;61CAAqF,IACnF,y0BAAoC,8EAAE,MACtC,uzBAA2B,8EAAE,MAC7B,uzBAA2B,8EAAE,MAC7B,wzBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAC7B,0zBAA2B,8EAAE,MAInC,4IAAmB,KACjB,4IAAoB,mFAAM,MAC1B,mJAA0B,KACxB,8IAAsB,KACpB;;;;;;;;;;;;;;;;;;g9DAA2F,IAC3F,6JAAqC,sFAAS,MAEhD,8IAAsB,KACpB;;;;;;;;;;;;;;;;;;g9DAA+F,IAC/F,2JAAmC,oFAAO,MAIhD,4IAAmB,KACjB,4IAAoB,8FAAiB,MACrC,mJAA0B,KACxB,8IAAsB,KACpB;;;;;;;;;;;;;;;;;;g9DAME,IACF,mKAA2C,sFAAS,MAEtD,8IAAsB,KACpB;;;;;;;;;;;;;;;;;;g9DAAiG,IACjG,iKAAyC,oFAAO,MAItD,+IAAsB,KACpB,mPAAqG,KACrG,0JAAiC,KACI,sGAEnC;;;kZAA2C,GAAxC,yDAAyB,IAAe,uHAAmD,MAAI,iFAC1F;;;kZAA6C,GAA1C,yDAA2B,IAAe,sFAAc,MAAI,0EACzE,MAEF,0OAKE,KAGN,4IAAoB,+EAAE,MACtB,oJAA2B,KACzB,+JAAuC,KACrC,sJAA8B,KAC5B,sgCAAoD,IAEtD,0HAAM,mFAAM,MAEd,iKAAyC,KACvC,wJAAgC,KAC9B,wgCAAsD,IAExD,0HAAM,qFAAQ,MAEhB,2HAAO,sIAAyD,MAElE,2NAA6F,KAKrG,ggBAAY,iDAjOV,YAAY,GAO+B,mBAA0B,eAA/D,aAAwF,EAAnD,SAA0B,GAYvD,+BAAoB,EAHpB,2GAEE,aAPJ,aASE,EADA,UAAoB,EAHpB,UAEE,GAHF,2BAA0B,EAJ5B,aASE,EALA,UAA0B,GAkB1B,+BAAoB,EAHpB,2GAEE,aAPJ,aASE,EADA,UAAoB,EAHpB,UAEE,GAHF,2BAA0B,EAJ5B,aASE,EALA,UAA0B,GAQ1B,0GAAiG,YAFnG,aAGC,EADC,UAAiG,GAMjG,2GAAkG,YAFpG,aAGC,EADC,UAAkG,GAMlG,2GAAkG,YAFpG,aAGC,EADC,UAAkG,GAiBlG,+BAAoB,EALpB,gOAIE,MATJ,aAWE,EADA,UAAoB,EALpB,UAIE,GALF,kCAAiC,EAJnC,aAWE,EAPA,UAAiC,GAUjC,wHAGC,YALH,aAMC,EAJC,UAGC,GAMD,iGAAwF,YAF1F,aAGC,EADC,UAAwF,GAgBxF,+BAAoB,EAHpB,qGAEE,aARJ,aAUE,EADA,UAAoB,EAHpB,UAEE,GAHF,wBAAuB,EALzB,aAUE,EALA,UAAuB,GAQvB,oGAA2F,YAF7F,aAGC,EADC,UAA2F,GAM3F,iGAAwF,YAF1F,aAGC,EADC,UAAwF,GAQjC,8BAA6B,EAApF,aAAqF,EAA9B,UAA6B,GAC1E,6BAAkB,EAA1B,aAAoC,EAA5B,0CAAkB,EAA1B,aAAoC,EAA5B,UAAkB,GAClB,6BAAkB,EAA1B,aAA2B,EAAnB,0CAAkB,EAA1B,aAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,aAA2B,EAAnB,0CAAkB,EAA1B,aAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,aAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,0CAAkB,EAA1B,cAA2B,EAAnB,UAAkB,GAClB,6BAAkB,EAA1B,cAA2B,EAAnB,2CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAClB,8BAAkB,EAA1B,cAA2B,EAAnB,4CAAkB,EAA1B,cAA2B,EAAnB,WAAkB,GAQN,0BAAwB,EAAC,0BAAc,EAA3D,cAA2F,EAAvE,WAAwB,EAAC,WAAc,GAAvC,0BAAwB,EAA5C,cAA2F,EAAvE,WAAwB,GAIxB,0BAAwB,EAAC,wBAAY,EAAzD,cAA+F,EAA3E,WAAwB,EAAC,WAAY,GAArC,0BAAwB,EAA5C,cAA+F,EAA3E,WAAwB,GAW1C,8BAA4B,EAC5B,0BAAc,EAHhB,cAME,EAJA,WAA4B,EAC5B,WAAc,GADd,8BAA4B,EAF9B,cAME,EAJA,WAA4B,GAQV,8BAA4B,EAAC,wBAAY,EAA7D,cAAiG,EAA7E,WAA4B,EAAC,WAAY,GAAzC,8BAA4B,EAAhD,cAAiG,EAA7E,WAA4B,GAU/C,0CAAyB,GAA5B,cAA2C,EAAxC,WAAyB,GACjB,4CAA2B,GAA9B,cAA6C,EAA1C,WAA2B,GAe9B,+BAAqB,EAA/B,cAAoD,EAA1C,WAAqB,GAMrB,iCAAuB,EAAjC,cAAsD,EAA5C,WAAuB,GAW/C,cAAY,mDA1NJ,stBAAwF,GAIlF,guBASE,GAKF,ouBASE,GAsBF,ouBAWE,GAmBF,ouBAUE,GAiBA,ouBAAqF,GA8CnF,0vBAA2F,GAI3F,0vBAA+F,GAS/F,0vBAME,GAIF,0vBAAiG,GAUnG,kNAA2C,GACnC,kNAA6C,GAMvD,sBAAgC,qBAHlC,cAKE,EAFA,WAAgC,GAShC,+2BAAoD,GAMpD,+2BAAsD","file":"auth-auth-module-ngfactory-es2015.js","sourcesContent":["<section class=\"publicPage\">\n  <main>\n    <app-header></app-header>\n    <div class=\"regWrapper\">\n      <div class=\"container\">\n        <div class=\"registrationContainer\">\n          <div class=\"hero-form-container search-container\">\n            <div class=\"hello-container\">\n              <span class=\"logo\">\n                <a href=\"#\">\n                  <h3>ChatrDate</h3>\n                  <!-- <img src=\"./assets/images/logo-grey.svg\" style=\"width: 16rem\" alt=\"myDates\" /> -->\n                </a>\n              </span>\n              <h1>Chat or Date with your chatter</h1>\n              <p class=\"slogan\">Join the dating site where you could meet anyone, anywhere!</p>\n            </div>\n            <form class=\"params-form current form\" [formGroup]=\"regForm\" (ngSubmit)=\"Submit()\">\n              <div class=\"wrapper\">\n                <div class=\"who-am-i\">\n                  <div class=\"genders-wrapper\">\n                    <div class=\"genders-field gender\" data-name=\"gender\" data-type=\"radiogroup\">\n                      <span class=\"label-text\">I am a:</span>\n                      <label>\n                        <input type=\"radio\" name=\"gender\" value=\"mal\" />\n                        <mat-icon svgIcon=\"male-icon\"></mat-icon>\n                      </label>\n                      <label>\n                        <input type=\"radio\" name=\"gender\" value=\"fem\" />\n                        <mat-icon svgIcon=\"female-icon\"></mat-icon>\n                      </label>\n                    </div>\n                    <div class=\"error-notification hidden\">\n                      <span class=\"error-message gender-empty hidden\">Select your gender</span>\n                    </div>\n                  </div>\n                  <div class=\"genders-wrapper\">\n                    <div class=\"genders-field preferences\" data-name=\"gender\" data-type=\"radiogroup\">\n                      <span class=\"label-text\">Seeking a:</span>\n                      <label>\n                        <input type=\"radio\" name=\"preferences-gender\" value=\"mal\" />\n                        <mat-icon svgIcon=\"male-icon\"></mat-icon>\n                      </label>\n                      <label>\n                        <input type=\"radio\" name=\"preferences-gender\" value=\"fem\" />\n                        <mat-icon svgIcon=\"female-icon\"></mat-icon>\n                      </label>\n                    </div>\n                    <div class=\"error-notification hidden\">\n                      <span class=\"error-message gender-empty hidden\">Select gender preference</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"age-wrapper\">\n                  <span class=\"min-age-container\">\n                    <span class=\"label-text ages\">Between ages: </span>\n                    <div class=\"field\">\n                      <div class=\"customized-select\">\n                        <select name=\"minage\" required>\n                          <option *ngFor=\"let minAge of minAges\" value=\"minAge\">\n                            {{ minAge }}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </span>\n                  <span class=\"max-age-container\"\n                    ><span class=\"label-text\">and</span>\n                    <div class=\"field\">\n                      <div class=\"customized-select\">\n                        <select name=\"maxage\" required>\n                          <option *ngFor=\"let maxAge of maxAges\" value=\"maxAge\">\n                            {{ maxAge }}\n                          </option>\n                        </select>\n                      </div>\n                    </div>\n                  </span>\n                </div>\n                <div class=\"button-wrapper\">\n                  <button class=\"action call-to-action large\" type=\"submit\" name=\"submit\" value=\"sign-up\">\n                    Grab a Chance\n                  </button>\n                </div>\n                <div class=\"external-wrapper\">\n                  <div class=\"external-auth google-auth\">\n                    <div class=\"google-wrapper\">\n                      <button class=\"action google medium\">\n                        <mat-icon svgIcon=\"google-icon\" aria-hidden=\"false\"></mat-icon>\n                        <span>Sign in via Google</span>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <p class=\"note\">By clicking “Sign in via Google” you agree to our Terms and Privacy Policy</p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"regMoodImage\" style=\"background-image: url('./assets/images/public/regform-mood.jpg')\"></div>\n    </div>\n    <div class=\"headlineStripe\">\n      <div class=\"container\">\n        <h1><span class=\"primary\">ChatrDate</span> - Chat or Date with your Chatter!</h1>\n      </div>\n    </div>\n    <div class=\"publicTeaserList\">\n      <!-- <mat-grid-list [cols]=\"breakpoint\" rowHeight=\"3:4\" (window:resize)=\"onResize($event)\">\n        <mat-grid-tile *ngFor=\"let publicProfile of publicProfiles\">\n          <app-profile-teaser [user]=\"publicProfile\" [type]=\"ProfileType\" class=\"profileTeaser public\">\n          </app-profile-teaser>\n        </mat-grid-tile>\n      </mat-grid-list> -->\n    </div>\n    <div class=\"container\">\n      <app-article\n        *ngFor=\"let article of artiles\"\n        class=\"article imgRight\"\n        [title]=\"article.title\"\n        [content]=\"article.content\"\n        [imgSrc]=\"article.imgSrc\"\n        [imgPosition]=\"article.imgPosition\"\n      ></app-article>\n    </div>\n  </main>\n  <app-footer></app-footer>\n</section>\n","import { Component, OnInit } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { Router } from '@angular/router'\nimport { LoginDialogComponent } from '../../ui/dialog/login-dialog/login-dialog.component'\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n})\nexport class HeaderComponent implements OnInit {\n  constructor(public dialog: MatDialog, private router: Router) { }\n\n  ngOnInit(): void { }\n\n  onLogin() {\n    this.router.navigateByUrl('/login')\n  }\n\n  onRegistration() {\n    this.router.navigateByUrl('/registration')\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginDialogComponent, {\n      panelClass: 'login-modal',\n    })\n  }\n}\n","import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { Router } from '@angular/router'\nimport { LoginDialogComponent } from 'src/app/shared/ui/dialog/login-dialog/login-dialog.component'\nimport { User } from 'src/app/_models/user'\nimport { AuthService } from 'src/app/_services/auth.service'\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css'],\n})\nexport class RegistrationComponent implements OnInit {\n  user: User\n  registerForm: FormGroup\n\n  constructor(\n    public dialog: MatDialog,\n    private router: Router,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    private authService: AuthService,\n    private fb: FormBuilder\n  ) {\n    this.matIconRegistry.addSvgIcon(\n      'google-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/google-logo-icon.svg')\n    )\n    this.matIconRegistry.addSvgIcon(\n      'facebook-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/facebook-logo-icon.svg')\n    )\n  }\n\n  ngOnInit(): void {\n    this.createRegisterForm()\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      dateOfBirth: ['2004-01-01', Validators.required],\n      gender: ['male'],\n      lookingFor: ['female']\n    })\n  }\n\n  passwordMatchGenerator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : { 'mismatch': true }\n  }\n\n  onRegistration() {\n    this.router.navigateByUrl('/auth/registration')\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginDialogComponent, {\n      panelClass: 'login-modal',\n    })\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n        console.log('Registration successful')\n      }, error => {\n        console.log(error)\n      }, () => {\n        this.authService.login(this.user).subscribe(() => {\n          this.authService.firebaseLogin();\n          this.router.navigate(['/main']);\n        })\n      })\n    }\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component'\nimport { LandingpageComponent } from './landingpage/landingpage.component'\nimport { LoginComponent } from './login/login.component'\nimport { RegistrationComponent } from './registration/registration.component'\n\nconst routes: Routes = [\n  {\n    path: 'registration',\n    component: RegistrationComponent,\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'forgot-password',\n    component: ForgotPasswordComponent,\n  },\n  {\n    path: '',\n    component: LandingpageComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core'\nimport { MatDialogRef } from '@angular/material/dialog'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { Router } from '@angular/router'\nimport { AuthService } from 'src/app/_services/auth.service'\n\n@Component({\n  selector: 'app-register-dialog',\n  templateUrl: './register-dialog.component.html',\n  styleUrls: ['./register-dialog.component.css'],\n})\nexport class RegisterDialogComponent implements OnInit {\n  model: any = {}\n  constructor(\n    public dialogRef: MatDialogRef<RegisterDialogComponent>,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    this.matIconRegistry.addSvgIcon(\n      'google-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/google-logo-icon.svg')\n    )\n  }\n\n  ngOnInit(): void {}\n  onCloseDialog(): void {\n    this.dialogRef.close()\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      (next) => {\n        console.log('Logged in successfully')\n        this.router.navigateByUrl('/main')\n      },\n      (error) => {\n        console.log('Failed to login')\n      }\n    )\n  }\n}\n","<section class=\"publicPage\">\n  <main>\n    <app-header></app-header>\n    <div class=\"container\">\n      <div class=\"publicAuthContent small\">\n        <div class=\"cnt\">\n          <div class=\"slogan\">\n            <h3>Forgot Password?</h3>\n          </div>\n          <div class=\"copy\">\n            <p>\n              <strong>Please enter your Email-address below.</strong><br />\n              We will send you an Email with further Steps to reset your password.\n            </p>\n          </div>\n          <form class=\"forgot-password-form\" [formGroup]=\"forgotpwdForm\" (ngSubmit)=\"Submit()\">\n            <mat-form-field class=\"login-form-full-width\">\n              <mat-label>Email Address</mat-label>\n              <input matInput type=\"email\" formControlName=\"userName\" placeholder=\"Your email address\" />\n            </mat-form-field>\n            <re-captcha\n              (resolved)=\"resolved($event)\"\n              siteKey=\"6LcurdYZAAAAAK-bwgN-PsMuHnQCxD6D_FnfuWsB\"\n              formControlName=\"recaptchaReactive\"\n            ></re-captcha>\n            <div class=\"form-buttons\">\n              <button mat-raised-button color=\"red\" mat-button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div class=\"moodImage\" style=\"background-image: url('./assets/images/public/auth-mood.jpg')\"></div>\n    </div>\n  </main>\n  <app-footer></app-footer>\n</section>\n","<div [className]=\"getArticleClass()\">\n  <h2>{{ title }}</h2>\n  <p>{{ content }}</p>\n  <img [src]=\"getImgSrc()\" [className]=\"getImgClass()\" alt=\"\" />\n</div>\n","import { __decorate, __param } from 'tslib';\nimport { InjectionToken, Inject, PLATFORM_ID, Optional, Injectable, EventEmitter, ElementRef, NgZone, Input, HostBinding, Output, Component, NgModule, HostListener, Directive, forwardRef } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { of, BehaviorSubject, Subject } from 'rxjs';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction loadScript(renderMode, onLoaded, urlParams, url, nonce) {\n    window.ng2recaptchaloaded = () => {\n        onLoaded(grecaptcha);\n    };\n    const script = document.createElement('script');\n    script.innerHTML = '';\n    const baseUrl = url || 'https://www.google.com/recaptcha/api.js';\n    script.src = `${baseUrl}?render=${renderMode}&onload=ng2recaptchaloaded${urlParams}`;\n    if (nonce) {\n        // tslint:disable-next-line:no-any Remove \"any\" cast once we upgrade Angular to 7 and TypeScript along with it\n        script.nonce = nonce;\n    }\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n}\n\nconst RECAPTCHA_LANGUAGE = new InjectionToken('recaptcha-language');\nconst RECAPTCHA_BASE_URL = new InjectionToken('recaptcha-base-url');\nconst RECAPTCHA_NONCE = new InjectionToken('recaptcha-nonce-tag');\nconst RECAPTCHA_SETTINGS = new InjectionToken('recaptcha-settings');\nconst RECAPTCHA_V3_SITE_KEY = new InjectionToken('recaptcha-v3-site-key');\n\nlet RecaptchaLoaderService = RecaptchaLoaderService_1 = class RecaptchaLoaderService {\n    constructor(\n    // tslint:disable-next-line:no-any\n    platformId, language, baseUrl, nonce, v3SiteKey) {\n        this.platformId = platformId;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.nonce = nonce;\n        this.v3SiteKey = v3SiteKey;\n        this.init();\n        this.ready = isPlatformBrowser(this.platformId) ? RecaptchaLoaderService_1.ready.asObservable() : of();\n    }\n    /** @internal */\n    init() {\n        if (RecaptchaLoaderService_1.ready) {\n            return;\n        }\n        if (isPlatformBrowser(this.platformId)) {\n            const subject = new BehaviorSubject(null);\n            RecaptchaLoaderService_1.ready = subject;\n            const langParam = this.language ? '&hl=' + this.language : '';\n            const renderMode = this.v3SiteKey || 'explicit';\n            loadScript(renderMode, (grecaptcha) => subject.next(grecaptcha), langParam, this.baseUrl, this.nonce);\n        }\n    }\n};\nRecaptchaLoaderService.ɵfac = function RecaptchaLoaderService_Factory(t) { return new (t || RecaptchaLoaderService)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(RECAPTCHA_LANGUAGE, 8), ɵngcc0.ɵɵinject(RECAPTCHA_BASE_URL, 8), ɵngcc0.ɵɵinject(RECAPTCHA_NONCE, 8), ɵngcc0.ɵɵinject(RECAPTCHA_V3_SITE_KEY, 8)); };\nRecaptchaLoaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RecaptchaLoaderService, factory: function (t) { return RecaptchaLoaderService.ɵfac(t); } });\n/**\n * @internal\n * @nocollapse\n */\nRecaptchaLoaderService.ready = null;\nRecaptchaLoaderService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_LANGUAGE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_BASE_URL,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_NONCE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_V3_SITE_KEY,] }] }\n];\nRecaptchaLoaderService = RecaptchaLoaderService_1 = __decorate([ __param(0, Inject(PLATFORM_ID)),\n    __param(1, Optional()), __param(1, Inject(RECAPTCHA_LANGUAGE)),\n    __param(2, Optional()), __param(2, Inject(RECAPTCHA_BASE_URL)),\n    __param(3, Optional()), __param(3, Inject(RECAPTCHA_NONCE)),\n    __param(4, Optional()), __param(4, Inject(RECAPTCHA_V3_SITE_KEY))\n], RecaptchaLoaderService);\nvar RecaptchaLoaderService_1;\n\nlet nextId = 0;\nlet RecaptchaComponent = class RecaptchaComponent {\n    constructor(elementRef, loader, zone, settings) {\n        this.elementRef = elementRef;\n        this.loader = loader;\n        this.zone = zone;\n        this.id = `ngrecaptcha-${nextId++}`;\n        this.resolved = new EventEmitter();\n        if (settings) {\n            this.siteKey = settings.siteKey;\n            this.theme = settings.theme;\n            this.type = settings.type;\n            this.size = settings.size;\n            this.badge = settings.badge;\n        }\n    }\n    ngAfterViewInit() {\n        this.subscription = this.loader.ready.subscribe((grecaptcha) => {\n            if (grecaptcha != null && grecaptcha.render instanceof Function) {\n                this.grecaptcha = grecaptcha;\n                this.renderRecaptcha();\n            }\n        });\n    }\n    ngOnDestroy() {\n        // reset the captcha to ensure it does not leave anything behind\n        // after the component is no longer needed\n        this.grecaptchaReset();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    /**\n     * Executes the invisible recaptcha.\n     * Does nothing if component's size is not set to \"invisible\".\n     */\n    execute() {\n        if (this.size !== 'invisible') {\n            return;\n        }\n        if (this.widget != null) {\n            this.grecaptcha.execute(this.widget);\n        }\n        else {\n            // delay execution of recaptcha until it actually renders\n            this.executeRequested = true;\n        }\n    }\n    reset() {\n        if (this.widget != null) {\n            if (this.grecaptcha.getResponse(this.widget)) {\n                // Only emit an event in case if something would actually change.\n                // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n                // on a non-resolved captcha.\n                this.resolved.emit(null);\n            }\n            this.grecaptchaReset();\n        }\n    }\n    /** @internal */\n    expired() {\n        this.resolved.emit(null);\n    }\n    /** @internal */\n    captchaResponseCallback(response) {\n        this.resolved.emit(response);\n    }\n    /** @internal */\n    grecaptchaReset() {\n        if (this.widget != null) {\n            this.zone.runOutsideAngular(() => this.grecaptcha.reset(this.widget));\n        }\n    }\n    /** @internal */\n    renderRecaptcha() {\n        this.widget = this.grecaptcha.render(this.elementRef.nativeElement, {\n            badge: this.badge,\n            callback: (response) => {\n                this.zone.run(() => this.captchaResponseCallback(response));\n            },\n            'expired-callback': () => {\n                this.zone.run(() => this.expired());\n            },\n            sitekey: this.siteKey,\n            size: this.size,\n            tabindex: this.tabIndex,\n            theme: this.theme,\n            type: this.type,\n        });\n        if (this.executeRequested === true) {\n            this.executeRequested = false;\n            this.execute();\n        }\n    }\n};\nRecaptchaComponent.ɵfac = function RecaptchaComponent_Factory(t) { return new (t || RecaptchaComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RecaptchaLoaderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(RECAPTCHA_SETTINGS, 8)); };\nRecaptchaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RecaptchaComponent, selectors: [[\"re-captcha\"]], hostVars: 1, hostBindings: function RecaptchaComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\", siteKey: \"siteKey\", theme: \"theme\", type: \"type\", size: \"size\", badge: \"badge\", tabIndex: \"tabIndex\" }, outputs: { resolved: \"resolved\" }, exportAs: [\"reCaptcha\"], decls: 0, vars: 0, template: function RecaptchaComponent_Template(rf, ctx) { }, encapsulation: 2 });\nRecaptchaComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: RecaptchaLoaderService },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_SETTINGS,] }] }\n];\n__decorate([\n    Input(),\n    HostBinding('attr.id')\n], RecaptchaComponent.prototype, \"id\", void 0);\n__decorate([\n    Input()\n], RecaptchaComponent.prototype, \"siteKey\", void 0);\n__decorate([\n    Input()\n], RecaptchaComponent.prototype, \"theme\", void 0);\n__decorate([\n    Input()\n], RecaptchaComponent.prototype, \"type\", void 0);\n__decorate([\n    Input()\n], RecaptchaComponent.prototype, \"size\", void 0);\n__decorate([\n    Input()\n], RecaptchaComponent.prototype, \"tabIndex\", void 0);\n__decorate([\n    Input()\n], RecaptchaComponent.prototype, \"badge\", void 0);\n__decorate([\n    Output()\n], RecaptchaComponent.prototype, \"resolved\", void 0);\nRecaptchaComponent = __decorate([ __param(3, Optional()), __param(3, Inject(RECAPTCHA_SETTINGS))\n], RecaptchaComponent);\n\nlet RecaptchaCommonModule = class RecaptchaCommonModule {\n};\nRecaptchaCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaCommonModule });\nRecaptchaCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RecaptchaCommonModule_Factory(t) { return new (t || RecaptchaCommonModule)(); } });\n\nlet RecaptchaModule = RecaptchaModule_1 = class RecaptchaModule {\n    // We need this to maintain backwards-compatibility with v4. Removing this will be a breaking change\n    static forRoot() {\n        return RecaptchaModule_1;\n    }\n};\nRecaptchaModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaModule });\nRecaptchaModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RecaptchaModule_Factory(t) { return new (t || RecaptchaModule)(); }, providers: [\n        RecaptchaLoaderService,\n    ], imports: [[\n            RecaptchaCommonModule,\n        ]] });\nvar RecaptchaModule_1;\n\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\nlet ReCaptchaV3Service = class ReCaptchaV3Service {\n    constructor(zone, siteKey, \n    // tslint:disable-next-line:no-any\n    platformId, baseUrl, nonce, language) {\n        /** @internal */\n        this.onLoadComplete = (grecaptcha) => {\n            this.grecaptcha = grecaptcha;\n            if (this.actionBacklog && this.actionBacklog.length > 0) {\n                this.actionBacklog.forEach(([action, subject]) => this.executeActionWithSubject(action, subject));\n                this.actionBacklog = undefined;\n            }\n        };\n        this.zone = zone;\n        this.isBrowser = isPlatformBrowser(platformId);\n        this.siteKey = siteKey;\n        this.nonce = nonce;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.init();\n    }\n    get onExecute() {\n        if (!this.onExecuteSubject) {\n            this.onExecuteSubject = new Subject();\n            this.onExecuteObservable = this.onExecuteSubject.asObservable();\n        }\n        return this.onExecuteObservable;\n    }\n    get onExecuteError() {\n        if (!this.onExecuteErrorSubject) {\n            this.onExecuteErrorSubject = new Subject();\n            this.onExecuteErrorObservable = this.onExecuteErrorSubject.asObservable();\n        }\n        return this.onExecuteErrorObservable;\n    }\n    /**\n     * Executes the provided `action` with reCAPTCHA v3 API.\n     * Use the emitted token value for verification purposes on the backend.\n     *\n     * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n     * https://developers.google.com/recaptcha/docs/v3.\n     *\n     * @param {string} action the action to execute\n     * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n     * The returned `Observable` completes immediately after emitting a value.\n     */\n    execute(action) {\n        const subject = new Subject();\n        if (this.isBrowser) {\n            if (!this.grecaptcha) {\n                // todo: add to array of later executions\n                if (!this.actionBacklog) {\n                    this.actionBacklog = [];\n                }\n                this.actionBacklog.push([action, subject]);\n            }\n            else {\n                this.executeActionWithSubject(action, subject);\n            }\n        }\n        return subject.asObservable();\n    }\n    /** @internal */\n    executeActionWithSubject(action, subject) {\n        this.zone.runOutsideAngular(() => {\n            // tslint:disable-next-line:no-any\n            this.grecaptcha.execute(this.siteKey, { action }).then((token) => {\n                this.zone.run(() => {\n                    subject.next(token);\n                    subject.complete();\n                    if (this.onExecuteSubject) {\n                        this.onExecuteSubject.next({ action, token });\n                    }\n                });\n                // tslint:disable-next-line:no-any\n            }, (error) => {\n                this.zone.run(() => {\n                    subject.error(error);\n                    if (this.onExecuteErrorSubject) {\n                        this.onExecuteErrorSubject.next({ action, error });\n                    }\n                });\n            });\n        });\n    }\n    /** @internal */\n    init() {\n        if (this.isBrowser) {\n            if ('grecaptcha' in window) {\n                this.grecaptcha = grecaptcha;\n            }\n            else {\n                const langParam = this.language ? '&hl=' + this.language : '';\n                loadScript(this.siteKey, this.onLoadComplete, langParam, this.baseUrl, this.nonce);\n            }\n        }\n    }\n};\nReCaptchaV3Service.ɵfac = function ReCaptchaV3Service_Factory(t) { return new (t || ReCaptchaV3Service)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(RECAPTCHA_V3_SITE_KEY), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(RECAPTCHA_BASE_URL, 8), ɵngcc0.ɵɵinject(RECAPTCHA_NONCE, 8), ɵngcc0.ɵɵinject(RECAPTCHA_LANGUAGE, 8)); };\nReCaptchaV3Service.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ReCaptchaV3Service, factory: function (t) { return ReCaptchaV3Service.ɵfac(t); } });\nReCaptchaV3Service.ctorParameters = () => [\n    { type: NgZone },\n    { type: String, decorators: [{ type: Inject, args: [RECAPTCHA_V3_SITE_KEY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_BASE_URL,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_NONCE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_LANGUAGE,] }] }\n];\nReCaptchaV3Service = __decorate([ __param(1, Inject(RECAPTCHA_V3_SITE_KEY)),\n    __param(2, Inject(PLATFORM_ID)),\n    __param(3, Optional()), __param(3, Inject(RECAPTCHA_BASE_URL)),\n    __param(4, Optional()), __param(4, Inject(RECAPTCHA_NONCE)),\n    __param(5, Optional()), __param(5, Inject(RECAPTCHA_LANGUAGE))\n], ReCaptchaV3Service);\n\nlet RecaptchaV3Module = class RecaptchaV3Module {\n};\nRecaptchaV3Module.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaV3Module });\nRecaptchaV3Module.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RecaptchaV3Module_Factory(t) { return new (t || RecaptchaV3Module)(); }, providers: [\n        ReCaptchaV3Service,\n    ] });\n\nlet RecaptchaValueAccessorDirective = RecaptchaValueAccessorDirective_1 = class RecaptchaValueAccessorDirective {\n    constructor(host) {\n        this.host = host;\n    }\n    writeValue(value) {\n        if (!value) {\n            this.host.reset();\n        }\n    }\n    registerOnChange(fn) { this.onChange = fn; }\n    registerOnTouched(fn) { this.onTouched = fn; }\n    onResolve($event) {\n        if (this.onChange) {\n            this.onChange($event);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n};\nRecaptchaValueAccessorDirective.ɵfac = function RecaptchaValueAccessorDirective_Factory(t) { return new (t || RecaptchaValueAccessorDirective)(ɵngcc0.ɵɵdirectiveInject(RecaptchaComponent)); };\nRecaptchaValueAccessorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RecaptchaValueAccessorDirective, selectors: [[\"re-captcha\", \"formControlName\", \"\"], [\"re-captcha\", \"formControl\", \"\"], [\"re-captcha\", \"ngModel\", \"\"]], hostBindings: function RecaptchaValueAccessorDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resolved\", function RecaptchaValueAccessorDirective_resolved_HostBindingHandler($event) { return ctx.onResolve($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // tslint:disable-next-line:no-forward-ref\n                useExisting: forwardRef(() => RecaptchaValueAccessorDirective_1)\n            },\n        ])] });\nRecaptchaValueAccessorDirective.ctorParameters = () => [\n    { type: RecaptchaComponent }\n];\n__decorate([\n    HostListener('resolved', ['$event'])\n], RecaptchaValueAccessorDirective.prototype, \"onResolve\", null);\nvar RecaptchaValueAccessorDirective_1;\n\nlet RecaptchaFormsModule = class RecaptchaFormsModule {\n};\nRecaptchaFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaFormsModule });\nRecaptchaFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RecaptchaFormsModule_Factory(t) { return new (t || RecaptchaFormsModule)(); }, imports: [[FormsModule, RecaptchaCommonModule]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RecaptchaLoaderService, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_LANGUAGE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_BASE_URL]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_NONCE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_V3_SITE_KEY]\n            }] }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RecaptchaComponent, [{\n        type: Component,\n        args: [{\n                exportAs: 'reCaptcha',\n                selector: 're-captcha',\n                template: ``\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: RecaptchaLoaderService }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_SETTINGS]\n            }] }]; }, { id: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: ['attr.id']\n        }], resolved: [{\n            type: Output\n        }], siteKey: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], badge: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecaptchaCommonModule, { declarations: [RecaptchaComponent], exports: [RecaptchaComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RecaptchaCommonModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    RecaptchaComponent,\n                ],\n                exports: [\n                    RecaptchaComponent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecaptchaModule, { imports: [RecaptchaCommonModule], exports: [RecaptchaComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RecaptchaModule, [{\n        type: NgModule,\n        args: [{\n                exports: [\n                    RecaptchaComponent,\n                ],\n                imports: [\n                    RecaptchaCommonModule,\n                ],\n                providers: [\n                    RecaptchaLoaderService,\n                ]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ReCaptchaV3Service, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Inject,\n                args: [RECAPTCHA_V3_SITE_KEY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_BASE_URL]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_NONCE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_LANGUAGE]\n            }] }]; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RecaptchaV3Module, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    ReCaptchaV3Service,\n                ]\n            }]\n    }], null, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RecaptchaValueAccessorDirective, [{\n        type: Directive,\n        args: [{\n                providers: [\n                    {\n                        multi: true,\n                        provide: NG_VALUE_ACCESSOR,\n                        // tslint:disable-next-line:no-forward-ref\n                        useExisting: forwardRef(() => RecaptchaValueAccessorDirective_1)\n                    },\n                ],\n                // tslint:disable-next-line:directive-selector\n                selector: 're-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]'\n            }]\n    }], function () { return [{ type: RecaptchaComponent }]; }, { onResolve: [{\n            type: HostListener,\n            args: ['resolved', ['$event']]\n        }] }); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecaptchaFormsModule, { declarations: function () { return [RecaptchaValueAccessorDirective]; }, imports: function () { return [FormsModule, RecaptchaCommonModule]; }, exports: function () { return [RecaptchaValueAccessorDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RecaptchaFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    RecaptchaValueAccessorDirective,\n                ],\n                exports: [RecaptchaValueAccessorDirective],\n                imports: [FormsModule, RecaptchaCommonModule]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RECAPTCHA_BASE_URL, RECAPTCHA_LANGUAGE, RECAPTCHA_NONCE, RECAPTCHA_SETTINGS, RECAPTCHA_V3_SITE_KEY, ReCaptchaV3Service, RecaptchaComponent, RecaptchaFormsModule, RecaptchaLoaderService, RecaptchaModule, RecaptchaV3Module, RecaptchaValueAccessorDirective, RecaptchaCommonModule as ɵa };\n\n//# sourceMappingURL=ng-recaptcha.js.map","import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { MatDialog } from '@angular/material/dialog'\nimport { Router } from '@angular/router'\nimport { LoginDialogComponent } from 'src/app/shared/ui/dialog/login-dialog/login-dialog.component'\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotpwdForm: FormGroup\n  resolved(captchaResponse: string) {\n    console.log(`Resolved captcha with response: ${captchaResponse}`)\n  }\n\n  constructor(public dialog: MatDialog, private router: Router, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.forgotpwdForm = this.fb.group({\n      userName: [''],\n      recaptchaReactive: [null],\n    })\n  }\n  Submit() {\n    console.log('Login Forgot password')\n  }\n\n  onRegistration() {\n    this.router.navigateByUrl('/auth/registration')\n  }\n\n  openLoginDialog() {\n    this.dialog.open(LoginDialogComponent, {\n      panelClass: 'login-modal',\n    })\n  }\n}\n","<section class=\"publicPage\">\n  <main>\n    <app-header></app-header>\n    <div class=\"container\">\n      <div class=\"publicAuthContent small loginFormWrapper\">\n        <div class=\"cnt\">\n          <div class=\"slogan\">\n            <h3>Login</h3>\n          </div>\n          <form #loginForm=\"ngForm\" class=\"form loginForm\" method=\"post\" (ngSubmit)=\"login()\">\n            <div class=\"field text\">\n              <label for=\"loginFormUsername_inline\"> Email Address/Username </label>\n              <input\n                type=\"text\"\n                name=\"userName\"\n                id=\"loginFormUsername_inline\"\n                placeholder=\"Your email address\"\n                required\n                [(ngModel)]=\"model.userName\"\n                autocomplete=\"userName\"\n              />\n            </div>\n            <div class=\"field text\">\n              <label for=\"loginFormPassword_inline\"> Password </label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                id=\"loginFormPassword_inline\"\n                placeholder=\"Your password\"\n                required\n                [(ngModel)]=\"model.password\"\n                autocomplete=\"current-password\"\n              />\n            </div>\n            <div class=\"formButtons\">\n              <a [routerLink]=\"['/auth/forgot-password']\"> Forgot Password? </a>\n              <input\n                type=\"submit\"\n                [disabled]=\"!loginForm.valid\"\n                value=\"Login\"\n                class=\"btn btnXL btnSpotColor mobileSubmit\"\n              />\n            </div>\n            <div class=\"spacer\">or</div>\n            <div class=\"socialButtons\">\n              <button href=\"#\" class=\"btn google glRegButton\">\n                <div class=\"icon google-icon\">\n                  <mat-icon svgIcon=\"google-icon\" aria-hidden=\"false\"></mat-icon>\n                </div>\n                <span> Google </span>\n              </button>\n              <button class=\"btn facebook fbRegButton\">\n                <div class=\"icon facebook-icon\">\n                  <mat-icon svgIcon=\"facebook-icon\" aria-hidden=\"false\"></mat-icon>\n                </div>\n                <span> Facebook </span>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div class=\"moodImage\" style=\"background-image: url('./assets/images/public/auth-mood.jpg')\"></div>\n    </div>\n  </main>\n  <app-footer></app-footer>\n</section>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { AuthRoutingModule } from './auth-routing.module'\nimport { RecaptchaModule, RecaptchaFormsModule } from 'ng-recaptcha'\n\n// Angular Material\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatMenuModule } from '@angular/material/menu'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\nimport { MatSelectModule } from '@angular/material/select'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatGridListModule } from '@angular/material/grid-list'\n\n// Component\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component'\nimport { LandingpageComponent } from './landingpage/landingpage.component'\nimport { RegistrationComponent } from './registration/registration.component'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatInputModule } from '@angular/material/input'\nimport { SharedModule } from '../shared/shared.module'\nimport { LoginComponent } from './login/login.component'\n\n@NgModule({\n  declarations: [ForgotPasswordComponent, LandingpageComponent, RegistrationComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatMenuModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    MatCheckboxModule,\n    MatGridListModule,\n  ],\n})\nexport class AuthModule {}\n","<footer class=\"pageFooter\">\n  <div class=\"container\">\n    <div class=\"certifications\">\n      <img src=\"./assets/images/netzsieger_en.png\" alt=\"\" />\n    </div>\n    <div class=\"portalDescription\">\n      The minimum age for using ChatrDate.com is at least 18 years and above. This platform is optimized for desktop,\n      mobile devices and tablets. ChatrDate.com is a social platform for men and women looking for fun, chat, flirt or\n      exiting and interested contacts. Many members sign up every day. ChatrDate.com is designed for pleasure and\n      entertainment. You also have the possibility to chat with virtual online profiles in our virtual entertainment\n      world, and real meetings with these profiles are not possible. The decision to meet with real profiles is always\n      at the discretion of our members, for more info you can read our Terms & Conditions, we strongly advise you to\n      read our Terms & Conditions before using our Service. We guarantee our members that chatting with them will be\n      always assured.\n    </div>\n    <nav class=\"meta\">\n      <a href=\"#\"> <mat-icon>language</mat-icon>United Kingdom - English </a>\n      <a [routerLink]=\"['/faq']\">Help / Support</a>\n      <a href=\"#\">Imprint</a>\n      <a [routerLink]=\"['/privacy']\">Privacy Policy</a>\n      <a [routerLink]=\"['/terms']\">Terms and Conditions & Communication Guidelines</a>\n    </nav>\n    <span class=\"address\"> 378 Hummingbird Way Reading MA Massachusetts 01867 </span>\n\n    <div class=\"paymentProvider\">\n      <span class=\"provider\">\n        <img src=\"./assets/images/creditCard.png \" class=\"\" alt=\"Credit Card\" />\n      </span>\n      <span class=\"provider\">\n        <img src=\"./assets/images/payPal.png \" class=\"\" alt=\"PayPal\" />\n      </span>\n    </div>\n    <span class=\"copy\"> © 2020 ChatrDate </span>\n  </div>\n</footer>\n","<div class=\"publicHeader\">\n  <div class=\"container\">\n    <a href=\"#\" class=\"logo\">\n      <!-- <img src=\"./assets/images/logo-grey.svg\" alt=\"myDates\" /> -->\n      <h3>ChatrDate</h3>\n      <span class=\"hidden\"> Chatr Date </span>\n    </a>\n    <button mat-icon-button color=\"accent\" class=\"menu-button\" aria-label=\"menu-icon\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n      <button mat-menu-item (click)=\"onLogin()\">\n        <span>Login</span>\n      </button>\n      <button mat-menu-item (click)=\"onRegistration()\">\n        <span>Registration</span>\n      </button>\n    </mat-menu>\n    <button mat-raised-button color=\"success\" mat-button (click)=\"openLoginDialog()\">Login</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { Router } from '@angular/router'\nimport { AlertifyService } from 'src/app/_services/alertify.service'\nimport { AuthService } from 'src/app/_services/auth.service'\nimport { ChatService } from 'src/app/_services/chat.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  model: any = {}\n  photoUrl: string;\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {\n    this.matIconRegistry.addSvgIcon(\n      'google-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/google-logo-icon.svg')\n    )\n    this.matIconRegistry.addSvgIcon(\n      'facebook-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/facebook-logo-icon.svg')\n    )\n  }\n\n  ngOnInit(): void {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(\n      (next) => {\n        this.alertify.success('Logged in successfully');\n      },\n      (error) => {\n        this.alertify.error(error);\n      },\n      () => {\n        this.authService.firebaseLogin()\n        this.router.navigate(['/main'])\n      }\n    )\n  }\n\n  loggedIn() {\n    return this.authService.loggedIn();\n  }\n\n  firebaseLogin() {\n    return this.authService.firebaseLogin();\n  }\n\n  // logout() {\n  //   localStorage.removeItem('token');\n  //   localStorage.removeItem('user');\n  //   this.authService.signOut();\n  //   // this.chatService.signOut();\n  //   this.authService.decodedToken = null;\n  //   this.authService.currentUser = null;\n  //   this.router.navigate(['/auth']);\n  // }\n}\n","import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { MatDialog } from '@angular/material/dialog'\nimport { MatIconRegistry } from '@angular/material/icon'\nimport { DomSanitizer } from '@angular/platform-browser'\nimport { ProfileTeaser } from 'src/app/interfaces'\nimport { LoginDialogComponent } from 'src/app/shared/ui/dialog/login-dialog/login-dialog.component'\nimport { RegisterDialogComponent } from 'src/app/shared/ui/dialog/register-dialog/register-dialog.component'\n\n@Component({\n  selector: 'app-landingpage',\n  templateUrl: './landingpage.component.html',\n  styleUrls: ['./landingpage.component.css'],\n})\nexport class LandingpageComponent implements OnInit {\n  regForm: FormGroup\n  minAges: any[] = [18, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75]\n  maxAges: any[] = [25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80]\n  regStep: number = 1\n  publicProfiles: ProfileTeaser[] = []\n  ProfileType: string = 'public'\n  breakpoint: number\n  artiles: any[] = [\n    {\n      title: 'ChatrDate – Find a local chatter who suits you',\n      content:\n        'On ChatrDate you will find your local or global chatters ready in seconds, from home, on the road or traveling through our responsive app. You will chat or meet with attractive men and woman, be it for just friendship! Just a chat! Or even a bit of flirt!',\n      imgPosition: 'imgRight',\n      imgSrc: 'mobile-app.jpg',\n    },\n    {\n      title: 'With our responsive app, you can be anywhere',\n      content:\n        'Yes, chat from anywhere, your phone, your tablet or your desktop! Chatters will be always there for you! Just browse numerous profiles and start chatting, leave a like or be liked, send a gift or be a gifter, see a profile or be a seen! No matter what you do “Chat or Date with your Chatter”',\n      imgPosition: 'imgLeft',\n      imgSrc: 'mood-web.jpg',\n    },\n    {\n      title: 'Completely free for women!',\n      content: 'It is indeed, all women are free to chat and have unlimited fun',\n      imgPosition: 'imgRight',\n      imgSrc: 'heart.jpg',\n    },\n    {\n      title: 'Your Data and Profile protection',\n      content: 'Your safety is provided by leading Safety & Security System in the industry',\n      imgPosition: '',\n      imgSrc: '',\n    },\n    {\n      title: 'Search by city',\n      content: 'Find a suitable chatter in your city',\n      imgPosition: '',\n      imgSrc: '',\n    },\n    {\n      title: 'Try out for free!',\n      content:\n        'No hidden costs, you will get free 150 credits, once you get into paid feature then everything gets transparent, you will be informed immediately whenever you buy coins',\n      imgPosition: '',\n      imgSrc: '',\n    },\n    {\n      title: 'Time to either chat, date, flirt or just have fun your way!',\n      content: '',\n      imgPosition: '',\n      imgSrc: '',\n    },\n  ]\n\n  constructor(\n    public dialog: MatDialog,\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer,\n    private fb: FormBuilder\n  ) {\n    this.matIconRegistry.addSvgIcon(\n      'google-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/google-logo-icon.svg')\n    )\n    this.matIconRegistry.addSvgIcon(\n      'facebook-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/facebook-logo-icon.svg')\n    )\n    this.matIconRegistry.addSvgIcon(\n      'male-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/male.svg')\n    )\n    this.matIconRegistry.addSvgIcon(\n      'female-icon',\n      this.domSanitizer.bypassSecurityTrustResourceUrl('assets/images/male.svg')\n    )\n  }\n\n  ngOnInit(): void {\n    this.regForm = this.fb.group({\n      userName: ['', Validators.required],\n      password: ['', Validators.required],\n      email: ['', Validators.email],\n      ageCtl: ['', Validators.required],\n    })\n\n    this.onUpdateGridColumn()\n  }\n\n  onResize(event) {\n    this.onUpdateGridColumn()\n  }\n\n  onUpdateGridColumn() {\n    // update profile image column\n    if (window.innerWidth >= 1400) {\n      this.breakpoint = 8\n    } else if (window.innerWidth >= 1024) {\n      this.breakpoint = 6\n    } else if (window.innerWidth >= 650) {\n      this.breakpoint = 4\n    } else {\n      this.breakpoint = 2\n    }\n    this.publicProfiles = new Array()\n    if (this.breakpoint > 2) {\n      for (var idx = 0; idx < this.breakpoint * 2; idx++) {\n        this.publicProfiles.push({\n          name: 'abc' + (idx + 1),\n          image: ['abc' + (idx + 1) + '.jpg'],\n          online: true,\n        })\n      }\n    } else {\n      for (var idx = 0; idx < 8; idx++) {\n        this.publicProfiles.push({\n          name: 'abc' + (idx + 1),\n          image: ['abc' + (idx + 1) + '.jpg'],\n          online: true,\n        })\n      }\n    }\n  }\n\n  Submit() {\n    this.dialog.open(RegisterDialogComponent, {\n      panelClass: 'register-dialog',\n    })\n  }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * @breaking-change 10.0.0\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, \n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * @breaking-change 10.0.0\n     */\n    _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this.defaultColor = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { Component, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { Component, Input, OnInit } from '@angular/core'\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.css'],\n})\nexport class ArticleComponent implements OnInit {\n  @Input() title: string\n  @Input() content: string\n  @Input() imgSrc: string\n  @Input() imgPosition: string\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  getArticleClass() {\n    return 'article ' + this.imgPosition\n  }\n\n  getImgClass() {\n    return 'mood ' + this.imgPosition\n  }\n\n  getImgSrc() {\n    if (this.imgSrc) {\n      return './assets/images/articles/' + this.imgSrc\n    }\n  }\n}\n","<section class=\"publicPage\">\n  <main>\n    <app-header></app-header>\n    <div class=\"container\">\n      <div class=\"publicAuthContent medium registrationFormWrapper\">\n        <div class=\"cnt\">\n          <div class=\"slogan\">\n            <h3>Registration</h3>\n          </div>\n          <form class=\"form whiteForm regForm\" [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n            <div class=\"fwWrap\" id=\"regFormWrap\">\n              <div class=\"field text\">\n                <label for=\"registerFormuserName\">userName</label>\n                <input\n                  type=\"text\"\n                  id=\"registerFormuserName\"\n                  placeholder=\"Your userName\"\n                  formControlName=\"userName\"\n                  [ngClass]=\"{\n                    'is-invalid': registerForm.get('userName').errors && registerForm.get('userName').touched\n                  }\"\n                  class=\"form-control\"\n                />\n                <div class=\"invalid-feedback\">Please choose a userName</div>\n              </div>\n              <div class=\"field text\">\n                <label for=\"registerFormPassword\">Password</label>\n                <input\n                  type=\"password\"\n                  id=\"registerFormPassword\"\n                  placeholder=\"Your password\"\n                  formControlName=\"password\"\n                  [ngClass]=\"{\n                    'is-invalid': registerForm.get('password').errors && registerForm.get('password').touched\n                  }\"\n                  class=\"form-control\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"registerForm.get('password').hasError('required') && registerForm.get('password').touched\"\n                >\n                  Password is required\n                </div>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"registerForm.get('password').hasError('minlength') && registerForm.get('password').touched\"\n                >\n                  Password must be at least 4 characters\n                </div>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"registerForm.get('password').hasError('maxlength') && registerForm.get('password').touched\"\n                >\n                  Password cannot exeed 8 characters\n                </div>\n              </div>\n              <div class=\"field text\">\n                <label for=\"registerFormPassword\">Confirm password</label>\n                <input\n                  type=\"password\"\n                  id=\"registerFormPassword\"\n                  placeholder=\"Your password\"\n                  formControlName=\"confirmPassword\"\n                  [ngClass]=\"{\n                    'is-invalid':\n                      (registerForm.get('confirmPassword').errors && registerForm.get('confirmPassword').touched) ||\n                      (registerForm.get('confirmPassword').touched && registerForm.hasError('mismatch'))\n                  }\"\n                  class=\"form-control\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"\n                    registerForm.get('confirmPassword').hasError('required') &&\n                    registerForm.get('confirmPassword').touched\n                  \"\n                >\n                  Password is required\n                </div>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"registerForm.hasError('mismatch') && registerForm.get('confirmPassword').touched\"\n                >\n                  Password must match\n                </div>\n              </div>\n              <div class=\"field text\">\n                <label for=\"registerFormEmail\">Email Address</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"registerFormEmail\"\n                  placeholder=\"Your email address\"\n                  formControlName=\"email\"\n                  [ngClass]=\"{\n                    'is-invalid': registerForm.get('email').errors && registerForm.get('email').touched\n                  }\"\n                  class=\"form-control\"\n                />\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"registerForm.get('email').hasError('required') && registerForm.get('email').touched\"\n                >\n                  Please choose a email\n                </div>\n                <div\n                  class=\"invalid-feedback\"\n                  *ngIf=\"registerForm.get('email').hasError('email') && registerForm.get('email').touched\"\n                >\n                  Please enter valid email\n                </div>\n              </div>\n              <div class=\"field select single\">\n                <label for=\"registerFormBirthday\"> Your age </label>\n                <div class=\"wrp\">\n                  <select id=\"registerFormBirthday\" class=\"form-control\" formControlName=\"dateOfBirth\">\n                    <option value=\"2004-01-01\" selected>18</option>\n                    <option value=\"2003-01-01\">19</option>\n                    <option value=\"2002-01-01\">20</option>\n                    <option value=\"2001-01-01\">21</option>\n                    <option value=\"2000-01-01\">22</option>\n                    <option value=\"1999-01-01\">23</option>\n                    <option value=\"1998-01-01\">24</option>\n                    <option value=\"1997-01-01\">25</option>\n                    <option value=\"1996-01-01\">26</option>\n                    <option value=\"1995-01-01\">27</option>\n                    <option value=\"1994-01-01\">28</option>\n                    <option value=\"1993-01-01\">29</option>\n                    <option value=\"1992-01-01\">30</option>\n                    <option value=\"1991-01-01\">31</option>\n                    <option value=\"1990-01-01\">32</option>\n                    <option value=\"1989-01-01\">33</option>\n                    <option value=\"1988-01-01\">34</option>\n                    <option value=\"1987-01-01\">35</option>\n                    <option value=\"1986-01-01\">36</option>\n                    <option value=\"1985-01-01\">37</option>\n                    <option value=\"1984-01-01\">38</option>\n                    <option value=\"1983-01-01\">39</option>\n                    <option value=\"1982-01-01\">40</option>\n                    <option value=\"1981-01-01\">41</option>\n                    <option value=\"1980-01-01\">42</option>\n                    <option value=\"1979-01-01\">43</option>\n                    <option value=\"1978-01-01\">44</option>\n                    <option value=\"1977-01-01\">45</option>\n                    <option value=\"1976-01-01\">46</option>\n                    <option value=\"1975-01-01\">47</option>\n                    <option value=\"1974-01-01\">48</option>\n                    <option value=\"1973-01-01\">49</option>\n                    <option value=\"1972-01-01\">50</option>\n                    <option value=\"1971-01-01\">51</option>\n                    <option value=\"1970-01-01\">52</option>\n                    <option value=\"1969-01-01\">53</option>\n                    <option value=\"1968-01-01\">54</option>\n                    <option value=\"1967-01-01\">55</option>\n                  </select>\n                </div>\n              </div>\n              <div class=\"field\">\n                <span class=\"label\"> I am </span>\n                <div class=\"radioButtons\">\n                  <div class=\"radioBtn\">\n                    <input type=\"radio\" formControlName=\"gender\" value=\"female\" id=\"registerFormGenderWoman\" />\n                    <label for=\"registerFormGenderWoman\"> a Woman </label>\n                  </div>\n                  <div class=\"radioBtn\">\n                    <input type=\"radio\" formControlName=\"gender\" value=\"male\" id=\"registerFormGenderMen\" checked />\n                    <label for=\"registerFormGenderMen\"> a Man </label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"field\">\n                <span class=\"label\"> I'm looking for </span>\n                <div class=\"radioButtons\">\n                  <div class=\"radioBtn\">\n                    <input\n                      type=\"radio\"\n                      formControlName=\"lookingFor\"\n                      value=\"female\"\n                      id=\"registerFormSearchGenderWoman\"\n                      checked=\"\"\n                    />\n                    <label for=\"registerFormSearchGenderWoman\"> a Woman </label>\n                  </div>\n                  <div class=\"radioBtn\">\n                    <input type=\"radio\" formControlName=\"lookingFor\" value=\"male\" id=\"registerFormSearchGenderMen\" />\n                    <label for=\"registerFormSearchGenderMen\"> a Man </label>\n                  </div>\n                </div>\n              </div>\n              <div class=\"checkbox\">\n                <input type=\"checkbox\" name=\"privacy\" value=\"1\" id=\"registerFormPrivacy\" data-val=\"checkedPrivacy\" />\n                <label for=\"registerFormPrivacy\">\n                  <!-- <mat-icon>check</mat-icon> -->\n                  I have read and accepted the\n                  <a [routerLink]=\"['/terms']\" tabindex=\"-2\">Terms and Conditions &amp; Communication Guidelines</a>\n                  and the <a [routerLink]=\"['/privacy']\" tabindex=\"-3\">Privacy Policy</a>.\n                </label>\n              </div>\n              <input\n                type=\"submit\"\n                class=\"btn btnSpotColor btnXL submit fullWidth\"\n                [disabled]=\"!registerForm.valid\"\n                value=\"Register\"\n              />\n            </div>\n          </form>\n          <div class=\"spacer\">or</div>\n          <div class=\"socialButtons\">\n            <button class=\"btn google glRegButton\">\n              <div class=\"icon google-icon\">\n                <mat-icon svgIcon=\"google-icon\" aria-hidden=\"false\"></mat-icon>\n              </div>\n              <span>Google</span>\n            </button>\n            <button class=\"btn facebook fbRegButton\">\n              <div class=\"icon facebook-icon\">\n                <mat-icon svgIcon=\"facebook-icon\" aria-hidden=\"false\"></mat-icon>\n              </div>\n              <span>Facebook</span>\n            </button>\n            <small> * We will never post on Facebook without your approval! </small>\n          </div>\n          <div class=\"moodImage\" style=\"background-image: url('./assets/images/public/auth-mood.jpg')\"></div>\n        </div>\n      </div>\n    </div>\n  </main>\n  <app-footer></app-footer>\n</section>\n"],"sourceRoot":"webpack:///"}